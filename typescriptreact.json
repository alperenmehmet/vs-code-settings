{
  "console.log": {
    "prefix": "cl",
    "body": "console.log(${1:'here'})$0"
  },
  "console.log('var', var)": {
    "prefix": "vl",
    "body": "console.log('$1', $1)$0"
  },
  "import x from '": {
    "prefix": "imp",
    "body": "import ${2:*} from '$1'$3"
  },
  "try/catch": {
    "prefix": "try",
    "body": ["try {", "  $1", "} catch (error) {", "  $0", "}"]
  },
  "async function": {
    "prefix": "afun",
    "body": ["async function $1($2) {", "  $0", "}"]
  },
  "throw log": {
    "prefix": "tl",
    "body": "throw new Error(JSON.stringify({$0}, null, 2))"
  },
  "spaced console.log": {
    "prefix": "scl",
    "body": [
      "console.log('**************************************************************************\\\\n\\\\n\\\\n')",
      "console.log($0)",
      "console.log('\\\\n\\\\n\\\\n**************************************************************************')"
    ]
  },
  "Reducer": {
    "prefix": "reducer",
    "body": [
      "function ${1:someReducer}(state, action) {",
      "  switch (action.type) {",
      "    case ${2:'value'}: {",
      "      return $0",
      "    }",
      "    default: {",
      "      throw new Error(`Unhandled action type: ${action.type}`)",
      "    }",
      "  }",
      "}"
    ]
  },
  "React.useState": {
    "prefix": "us",
    "body": [
      "const [${1}, set${1/(^[a-zA-Z])(.*)/${1:/pascalcase}${2}/}] = React.useState(${2:initial${1/(^[a-zA-Z])(.*)/${1:/upcase}${2}/}})$0"
    ]
  },
  "React.useEffect": {
    "prefix": "uf",
    "body": ["React.useEffect(() => {", "  $0", "}, [])"]
  },
  "React.useReducer": {
    "prefix": "ur",
    "body": [
      "const [state, dispatch] = React.useReducer(${1:someReducer}, {",
      "  $0",
      "})"
    ]
  },
  "React.useRef": {
    "prefix": "urf",
    "body": ["const ${1:someRef} = React.useRef($2)$0"]
  },
  "React Functional Component": {
    "prefix": "rfc",
    "body": [
      "",
      "export const ${1:name} = () => {",
      "  return (",
      "    <div>",
      "      hello ${1:name}",
      "    </div>",
      "  )",
      "};",
      "",
      ""
    ]
  },
  "Jest test": {
    "prefix": "test",
    "body": ["test('$1', () => {", "  $0", "})"]
  },
  "split-guide final": {
    "prefix": "sgf",
    "body": ["// FINAL_START", "$1", "// FINAL_END"]
  },
  "Jest async test": {
    "prefix": "atest",
    "body": ["test('$1', async () => {", "  $0", "})"]
  },
  "Mocha it block": {
    "prefix": "it",
    "body": ["it('$1', () => {", "  $2", "})"]
  },
  "Mocha describe block": {
    "prefix": "desc",
    "body": ["describe('$1', () => {", "  $2", "})"]
  }
}
